<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create variables

hsp = 4
vsp = 0
grav = 0.7
energy = 100
jumpspeed = 8
inventory1 = M_NONE
inventory2 = M_NONE

timer = 10800

allslots = ds_list_create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move player and interact

scr_detect_input()

nextx = (right_key - left_key) * hsp 
xcol = (right_key - left_key)
if(place_meeting(x,y+1,obj_rthread)) 
{
    nextx = hsp*3  
    xcol = 1 
}
if(place_meeting(x,y+1,obj_lthread)) 
{
    nextx = -hsp*3  
    xcol = -1
}
if(place_meeting(x,y+1,obj_move))
{
    var this_one = instance_place(x,y+1,obj_move);
    nextx += -this_one.left * this_one.spd
    xcol += -this_one.left
}
if(place_meeting(x,y+1,obj_elevator))
{
    var that_one = instance_place(x,y+1,obj_elevator);
    y = that_one.y-1
}
if(!place_meeting(x+nextx, y, obj_solid))
{
    x += nextx
}
else if(!place_meeting(x+xcol, y, obj_solid))
{
    x += xcol
}

//gravity (and then implement jump)

if(place_meeting(x,y+1,obj_solid)) 
{
    if (jump_key){vsp = -jumpspeed}
}
floor_id = instance_place(x,y+vsp+1,obj_solid)
    
if(floor_id != noone)
{
    if (vsp&gt;=0)
    {
        y= floor_id.y-floor_id.sprite_height
    }
    else
    {
        y= floor_id.y+floor_id.sprite_height
    }
    vsp = 0
}
else if (vsp&lt;16){vsp += grav}

y += vsp


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="116">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_search_slots</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_battery,0,10,10)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

for(i=0;i&lt; ds_list_size(allslots);i++)
{
    slot_id = instance_find(obj_slot,i)
    if (slot_id != noone)
    {
        if (distance_to_point(slot_id.x,slot_id.y)&lt;128)
        {
            if(!place_meeting(x,y,obj_slot) or inventory1 == M_NONE)
            {
                draw_set_colour(c_orange)
                draw_line_width(x+16,y+16,slot_id.x,slot_id.y,3)
            }
            else
            {
                draw_set_colour(c_red)
                draw_line_width(x+16,y+16,slot_id.x,slot_id.y,3)
    
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
