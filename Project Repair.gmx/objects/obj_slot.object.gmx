<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///have module or target or none
module = M_NONE
target = M_NONE
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(module)
{
    case M_LADDER:
        if (!instance_place(x,y,obj_ladder))
        {
            instance_create(x,y,obj_ladder)
        }
        break
    case M_ELEVATOR:
        if (!instance_place(x,y,obj_elevator))
        {
            instance_create(x-64,y+32,obj_elevator)
        }
        break
    case M_MOVE:
        if (!instance_place(x,y,obj_move))
        {
            instance_create(x,y+32,obj_move)
        }
        break
    case M_PLATFORM:
        if (!instance_place(x,y,obj_platform))
        {
            instance_create(x-64,y+32,obj_platform)
        }
        break
    case M_LTHREAD:
        if (!instance_place(x,y,obj_lthread))
        {
            instance_create(x-64,y+32,obj_lthread)
        }
        break
    case M_RTHREAD:
        if (!instance_place(x,y,obj_rthread ))
        {
            instance_create(x-64,y+32,obj_rthread )
        }
        break
    case M_NONE:
        scr_search_destroy()
        break
}


player = instance_nearest(x,y,obj_player);

if (distance_to_object(player)&lt;128 and !place_meeting(x,y,player) and player.place_key and position_meeting(mouse_x,mouse_y,self))
{
    if(player.inventory1 != M_NONE and module ==M_NONE)
    {
        module = player.inventory1
        player.inventory1 = M_NONE
        scr_check_every_slot()
    }
    else if(player.inventory1 == M_NONE and module != M_NONE)
    {
        player.inventory1 = module
        module = M_NONE
        scr_check_every_slot()
    }
}

if (distance_to_object(player)&lt;128 and !place_meeting(x,y,player) and player.place2_key and position_meeting(mouse_x,mouse_y,self))
{
    if(player.inventory2 != M_NONE and module ==M_NONE)
    {
        module = player.inventory2
        player.inventory2 = M_NONE
        scr_check_every_slot()
    }
    else if(player.inventory2 == M_NONE and module != M_NONE)
    {
        player.inventory2 = module
        module = M_NONE
        scr_check_every_slot()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = target

draw_self()


if (distance_to_object(player)&lt;128)
{
   if(!place_meeting(x,y,player))
   {draw_line_width_colour(x,y,player.x+16,player.y+16,3,c_orange,c_orange)}
   else
   {draw_line_width_colour(x,y,player.x+16,player.y+16,3,c_red,c_red)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
